// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeminarskiRSII.WebApi.Database;

#nullable disable

namespace SeminarskiRSII.WebApi.Migrations
{
    [DbContext(typeof(IB210330Context))]
    [Migration("20250302132848_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Cjenovnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("Cijena")
                        .HasColumnType("real")
                        .HasColumnName("cijena");

                    b.Property<int>("SobaId")
                        .HasColumnType("int")
                        .HasColumnName("sobaID");

                    b.Property<string>("Valuta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "SobaId" }, "IX_cjenovnik_sobaID");

                    b.ToTable("cjenovnik", (string)null);
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Drzava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("naziv");

                    b.HasKey("Id");

                    b.ToTable("drzava", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Naziv = "Bosna i Hercegovina"
                        },
                        new
                        {
                            Id = 2,
                            Naziv = "Hrvatska"
                        },
                        new
                        {
                            Id = 3,
                            Naziv = "Srbija"
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Gost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<int>("GradId")
                        .HasColumnType("int")
                        .HasColumnName("gradID");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ime");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prezime");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefon");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "GradId" }, "IX_gost_gradID");

                    b.ToTable("gost", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "adin.smajkic@gmail.com",
                            GradId = 1,
                            Ime = "Adin",
                            KorisnickoIme = "adin1998",
                            LozinkaHash = "ZG+m4HIibaJpXMVrtXhp9+QQiDE=",
                            LozinkaSalt = "8yGM2clNjUvFcuobbcqRSg==",
                            Prezime = "Smajkic",
                            Telefon = "5842521"
                        },
                        new
                        {
                            Id = 2,
                            Email = "ahmed.sm@gmail.com",
                            GradId = 2,
                            Ime = "ahmed",
                            KorisnickoIme = "ahmo",
                            LozinkaHash = "57dqXte2i8RuxpISQMzOjW/kYUA=",
                            LozinkaSalt = "uSHCckjLFYgVNJRSWd2W5g==",
                            Prezime = "smajic",
                            Telefon = "062263580"
                        },
                        new
                        {
                            Id = 3,
                            Email = "novikorisnk.test@gmail.com",
                            GradId = 3,
                            Ime = "test",
                            KorisnickoIme = "test98",
                            LozinkaHash = "nEE+3SNUp4E2UX5xfPGpH6R+ELA=",
                            LozinkaSalt = "uFdyLQoAo6+BtcRfOYC0Og==",
                            Prezime = "novi korisnik",
                            Telefon = "52515215"
                        },
                        new
                        {
                            Id = 4,
                            Email = "dd.ss@gmail.com",
                            GradId = 1,
                            Ime = "aaaa",
                            KorisnickoIme = "aadd",
                            LozinkaHash = "TPBs9dFgTsf0SmZpnSfQcmyIISE=",
                            LozinkaSalt = "cJCHfu17NRuIYzB3bS9onw==",
                            Prezime = "dddd",
                            Telefon = "43743743"
                        },
                        new
                        {
                            Id = 5,
                            Email = "huso.smajkic@gmail.com",
                            GradId = 4,
                            Ime = "huso",
                            KorisnickoIme = "huso55",
                            LozinkaHash = "cLhzBmLT6jPfLssPnXTSFOLBehw=",
                            LozinkaSalt = "uy9mahnWC7AvJIt+6qeWPg==",
                            Prezime = "smajkic",
                            Telefon = "1234214"
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.GostiNotifikacije", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GostId")
                        .HasColumnType("int")
                        .HasColumnName("gostID");

                    b.Property<int?>("NotifikacijeId")
                        .HasColumnType("int")
                        .HasColumnName("notifikacijeId");

                    b.Property<bool>("Pregledana")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "GostId" }, "IX_gostiNotifikacije_gostID");

                    b.HasIndex(new[] { "NotifikacijeId" }, "IX_gostiNotifikacije_notifikacijeId");

                    b.ToTable("gostiNotifikacije", (string)null);
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Grad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DrzavaId")
                        .HasColumnType("int")
                        .HasColumnName("drzavaID");

                    b.Property<string>("NazivGrada")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nazivGrada");

                    b.Property<int>("PostanskiBroj")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DrzavaId" }, "IX_grad_drzavaID");

                    b.ToTable("grad", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DrzavaId = 1,
                            NazivGrada = "Mostar",
                            PostanskiBroj = 0
                        },
                        new
                        {
                            Id = 2,
                            DrzavaId = 1,
                            NazivGrada = "Sarajevo",
                            PostanskiBroj = 0
                        },
                        new
                        {
                            Id = 3,
                            DrzavaId = 1,
                            NazivGrada = "Tuzla",
                            PostanskiBroj = 0
                        },
                        new
                        {
                            Id = 4,
                            DrzavaId = 2,
                            NazivGrada = "Zagreb",
                            PostanskiBroj = 0
                        },
                        new
                        {
                            Id = 5,
                            DrzavaId = 3,
                            NazivGrada = "Beograd",
                            PostanskiBroj = 0
                        },
                        new
                        {
                            Id = 6,
                            DrzavaId = 1,
                            NazivGrada = "Bihac",
                            PostanskiBroj = 0
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Notifikacije", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DatumSlanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NovostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NovostId" }, "IX_notifikacije_NovostId");

                    b.ToTable("notifikacije", (string)null);
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Novosti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DatumObjave")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OsobljeId")
                        .HasColumnType("int")
                        .HasColumnName("osobljeID");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "OsobljeId" }, "IX_novosti_osobljeID");

                    b.ToTable("novosti", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatumObjave = new DateTime(2024, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Naslov = "Akcije za novu godinu",
                            OsobljeId = 1,
                            Sadrzaj = "Docekajte novu godinu u nasem hotelu uz nikad povoljnije cijene"
                        },
                        new
                        {
                            Id = 2,
                            DatumObjave = new DateTime(2024, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Naslov = "Svi smjestajni kapaciteti popunjeni",
                            OsobljeId = 4,
                            Sadrzaj = "Prethodni vikend, svi smjestajni kapaciteti bili popunjeni"
                        },
                        new
                        {
                            Id = 3,
                            DatumObjave = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Naslov = "Posjeta hotelu",
                            OsobljeId = 4,
                            Sadrzaj = "Nas hotel posjetila reprezentacija Bosne i Hercegovine"
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Osoblje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ime");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("prezime");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("telefon");

                    b.HasKey("Id");

                    b.ToTable("osoblje", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "adin.smajkic@gmail.com",
                            Ime = "adiiiin",
                            KorisnickoIme = "adin1998",
                            LozinkaHash = "XsHiRH3wqycFCD4pG26l5xPqJgo=",
                            LozinkaSalt = "FnmwHukhLVZJJLzL2Jg8HQ==",
                            Prezime = "smaajkic",
                            Slika = new byte[0],
                            Telefon = "061981256"
                        },
                        new
                        {
                            Id = 2,
                            Email = "haris.tulic@edu.fit.ba",
                            Ime = "Haris",
                            KorisnickoIme = "tulatula",
                            LozinkaHash = "RLkYnZGEW+Otmx0Kn78tQmSLxgk=",
                            LozinkaSalt = "A3bYgzz6F0Yvq/9KStj2oQ==",
                            Prezime = "Tulic",
                            Slika = new byte[0],
                            Telefon = "0620626"
                        },
                        new
                        {
                            Id = 3,
                            Email = "dina.bjelic@gmail.com",
                            Ime = "Dina",
                            KorisnickoIme = "dina99",
                            LozinkaHash = "XsHiRH3wqycFCD4pG26l5xPqJgo=",
                            LozinkaSalt = "A3bYgzz6F0Yvq/9KStj2oQ==",
                            Prezime = "Bjelic",
                            Slika = new byte[0],
                            Telefon = "062897542"
                        },
                        new
                        {
                            Id = 4,
                            Email = "smajo.durakovic@gmail.com",
                            Ime = "Smajo",
                            KorisnickoIme = "smajo95",
                            LozinkaHash = "RLkYnZGEW+Otmx0Kn78tQmSLxgk=",
                            LozinkaSalt = "A3bYgzz6F0Yvq/9KStj2oQ==",
                            Prezime = "Durakovic",
                            Slika = new byte[0],
                            Telefon = "525521215"
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.OsobljeUloge", b =>
                {
                    b.Property<int>("OsobljeUlogeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OsobljeUlogeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OsobljeUlogeId"), 1L, 1);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime2");

                    b.Property<int>("OsobljeId")
                        .HasColumnType("int")
                        .HasColumnName("osobljeID");

                    b.Property<int>("VrstaOsobljaId")
                        .HasColumnType("int")
                        .HasColumnName("vrstaOsobljaID");

                    b.HasKey("OsobljeUlogeId");

                    b.HasIndex(new[] { "OsobljeId" }, "IX_osobljeUloge_osobljeID");

                    b.HasIndex(new[] { "VrstaOsobljaId" }, "IX_osobljeUloge_vrstaOsobljaID");

                    b.ToTable("osobljeUloge", (string)null);

                    b.HasData(
                        new
                        {
                            OsobljeUlogeId = 1,
                            DatumIzmjene = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OsobljeId = 1,
                            VrstaOsobljaId = 1
                        },
                        new
                        {
                            OsobljeUlogeId = 2,
                            DatumIzmjene = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OsobljeId = 2,
                            VrstaOsobljaId = 3
                        },
                        new
                        {
                            OsobljeUlogeId = 3,
                            DatumIzmjene = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OsobljeId = 3,
                            VrstaOsobljaId = 4
                        },
                        new
                        {
                            OsobljeUlogeId = 4,
                            DatumIzmjene = new DateTime(2025, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OsobljeId = 4,
                            VrstaOsobljaId = 3
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Recenzija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GostId")
                        .HasColumnType("int")
                        .HasColumnName("gostID");

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("komentar");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int")
                        .HasColumnName("ocjena");

                    b.Property<int>("SobaId")
                        .HasColumnType("int")
                        .HasColumnName("sobaID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "GostId" }, "IX_recenzija_gostID");

                    b.HasIndex(new[] { "SobaId" }, "IX_recenzija_sobaID");

                    b.ToTable("recenzija", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GostId = 1,
                            Komentar = "Prezadovoljan hotelom i uslugom",
                            Ocjena = 10,
                            SobaId = 1
                        },
                        new
                        {
                            Id = 2,
                            GostId = 2,
                            Komentar = "Hrana nije bila bas najbolja",
                            Ocjena = 8,
                            SobaId = 2
                        },
                        new
                        {
                            Id = 3,
                            GostId = 3,
                            Komentar = "Sve preporuke za ovaj hotel",
                            Ocjena = 9,
                            SobaId = 2
                        },
                        new
                        {
                            Id = 4,
                            GostId = 4,
                            Komentar = "Prezadovoljan sa svim",
                            Ocjena = 10,
                            SobaId = 3
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Rezervacija", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<float>("Cijena")
                        .HasColumnType("real");

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime2")
                        .HasColumnName("datumRezervacije");

                    b.Property<int>("GostId")
                        .HasColumnType("int")
                        .HasColumnName("gostID");

                    b.Property<bool?>("Otkazana")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Qrcode")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("SobaId")
                        .HasColumnType("int")
                        .HasColumnName("sobaID");

                    b.Property<DateTime>("ZavrsetakRezervacije")
                        .HasColumnType("datetime2")
                        .HasColumnName("zavrsetakRezervacije");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "GostId" }, "IX_rezervacija_gostID");

                    b.HasIndex(new[] { "SobaId" }, "IX_rezervacija_sobaID");

                    b.ToTable("rezervacija", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cijena = 305f,
                            DatumRezervacije = new DateTime(2024, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GostId = 1,
                            SobaId = 1,
                            ZavrsetakRezervacije = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Cijena = 295f,
                            DatumRezervacije = new DateTime(2024, 12, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GostId = 2,
                            SobaId = 1,
                            ZavrsetakRezervacije = new DateTime(2024, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Cijena = 215f,
                            DatumRezervacije = new DateTime(2024, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GostId = 3,
                            SobaId = 2,
                            ZavrsetakRezervacije = new DateTime(2024, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Cijena = 350f,
                            DatumRezervacije = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GostId = 4,
                            SobaId = 3,
                            ZavrsetakRezervacije = new DateTime(2024, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.RezervacijaUsluga", b =>
                {
                    b.Property<int>("RezervacijaUslugaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervacijaUslugaID"), 1L, 1);

                    b.Property<int?>("RezervacijaID")
                        .HasColumnType("int");

                    b.Property<int?>("UslugaId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaUslugaID");

                    b.HasIndex("RezervacijaID");

                    b.HasIndex("UslugaId");

                    b.ToTable("RezervacijaUsluga");

                    b.HasData(
                        new
                        {
                            RezervacijaUslugaID = 1,
                            RezervacijaID = 1,
                            UslugaId = 1
                        },
                        new
                        {
                            RezervacijaUslugaID = 2,
                            RezervacijaID = 1,
                            UslugaId = 2
                        },
                        new
                        {
                            RezervacijaUslugaID = 3,
                            RezervacijaID = 1,
                            UslugaId = 4
                        },
                        new
                        {
                            RezervacijaUslugaID = 4,
                            RezervacijaID = 2,
                            UslugaId = 3
                        },
                        new
                        {
                            RezervacijaUslugaID = 5,
                            RezervacijaID = 3,
                            UslugaId = 4
                        },
                        new
                        {
                            RezervacijaUslugaID = 6,
                            RezervacijaID = 3,
                            UslugaId = 2
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Soba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrojSobe")
                        .HasColumnType("int");

                    b.Property<int>("BrojSprata")
                        .HasColumnType("int");

                    b.Property<string>("OpisSobe")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("opisSobe");

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicturePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("SobaStatusId")
                        .HasColumnType("int")
                        .HasColumnName("sobaStatusID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "SobaStatusId" }, "IX_soba_sobaStatusID");

                    b.ToTable("soba", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrojSobe = 1,
                            BrojSprata = 1,
                            OpisSobe = "Soba u tisini",
                            Slika = new byte[0],
                            SobaStatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            BrojSobe = 2,
                            BrojSprata = 1,
                            OpisSobe = "Soba u tisini",
                            Slika = new byte[0],
                            SobaStatusId = 1
                        },
                        new
                        {
                            Id = 3,
                            BrojSobe = 3,
                            BrojSprata = 1,
                            OpisSobe = "Soba s pogledom na more",
                            Slika = new byte[0],
                            SobaStatusId = 2
                        },
                        new
                        {
                            Id = 4,
                            BrojSobe = 4,
                            BrojSprata = 2,
                            OpisSobe = "Soba s pogledom na cijeli grad",
                            Slika = new byte[0],
                            SobaStatusId = 1
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.SobaOsoblje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("OsobljeId")
                        .HasColumnType("int")
                        .HasColumnName("osobljeID");

                    b.Property<int>("SobaId")
                        .HasColumnType("int")
                        .HasColumnName("sobaID");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "OsobljeId" }, "IX_sobaOsoblje_osobljeID");

                    b.HasIndex(new[] { "SobaId" }, "IX_sobaOsoblje_sobaID");

                    b.ToTable("sobaOsoblje", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OsobljeId = 4,
                            SobaId = 1
                        },
                        new
                        {
                            Id = 2,
                            OsobljeId = 4,
                            SobaId = 2
                        },
                        new
                        {
                            Id = 3,
                            OsobljeId = 4,
                            SobaId = 3
                        },
                        new
                        {
                            Id = 4,
                            OsobljeId = 4,
                            SobaId = 4
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.SobaStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("opis");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("sobaStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Opis = "Soba Slobodna za rezervisanje",
                            Status = "Slobodna"
                        },
                        new
                        {
                            Id = 2,
                            Opis = "Soba trenutacno zauzeta",
                            Status = "Zauzeta"
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Usluga", b =>
                {
                    b.Property<int>("UslugaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UslugaID"), 1L, 1);

                    b.Property<int>("Cijena")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UslugaID");

                    b.ToTable("Usluga");

                    b.HasData(
                        new
                        {
                            UslugaID = 1,
                            Cijena = 10,
                            Naziv = "Dorucak",
                            Opis = "Dorucak u hotelu"
                        },
                        new
                        {
                            UslugaID = 2,
                            Cijena = 15,
                            Naziv = "Rucak",
                            Opis = "Rucak u hotelu"
                        },
                        new
                        {
                            UslugaID = 3,
                            Cijena = 50,
                            Naziv = "Masaza",
                            Opis = "Usluge masaze"
                        },
                        new
                        {
                            UslugaID = 4,
                            Cijena = 75,
                            Naziv = "Sauna",
                            Opis = "Koristenje saune"
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.VrstaOsoblja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Pozicija")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pozicija");

                    b.Property<string>("Zaduzenja")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("zaduzenja");

                    b.HasKey("Id");

                    b.ToTable("vrstaOsoblja", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Pozicija = "Direktor",
                            Zaduzenja = "Vodjenje posla i upravljanje ljudima i poslovima"
                        },
                        new
                        {
                            Id = 2,
                            Pozicija = "Administracija",
                            Zaduzenja = "vodjenje hotela i ugovaranje dogadjaja"
                        },
                        new
                        {
                            Id = 3,
                            Pozicija = "Recepcionar",
                            Zaduzenja = "Docekivanje gostiju i davanje svih potrebnih informacija"
                        },
                        new
                        {
                            Id = 4,
                            Pozicija = "Spremacica",
                            Zaduzenja = "Spremanje i ciscenje soba kako bi nasi gosti bili zadovoljni uslugom"
                        });
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Cjenovnik", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.Soba", "Soba")
                        .WithMany("Cjenovnik")
                        .HasForeignKey("SobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Soba");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Gost", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.Grad", "Grad")
                        .WithMany("Gost")
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grad");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.GostiNotifikacije", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.Gost", "Gost")
                        .WithMany("GostiNotifikacije")
                        .HasForeignKey("GostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiRSII.WebApi.Database.Notifikacije", "Notifikacije")
                        .WithMany("GostiNotifikacije")
                        .HasForeignKey("NotifikacijeId");

                    b.Navigation("Gost");

                    b.Navigation("Notifikacije");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Grad", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.Drzava", "Drzava")
                        .WithMany("Grad")
                        .HasForeignKey("DrzavaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drzava");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Notifikacije", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.Novosti", "Novost")
                        .WithMany("Notifikacije")
                        .HasForeignKey("NovostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Novost");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Novosti", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.Osoblje", "Osoblje")
                        .WithMany("Novosti")
                        .HasForeignKey("OsobljeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Osoblje");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.OsobljeUloge", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.Osoblje", "Osoblje")
                        .WithMany("OsobljeUloge")
                        .HasForeignKey("OsobljeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiRSII.WebApi.Database.VrstaOsoblja", "VrstaOsoblja")
                        .WithMany("OsobljeUloge")
                        .HasForeignKey("VrstaOsobljaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Osoblje");

                    b.Navigation("VrstaOsoblja");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Recenzija", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.Gost", "Gost")
                        .WithMany("Recenzija")
                        .HasForeignKey("GostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiRSII.WebApi.Database.Soba", "Soba")
                        .WithMany("Recenzija")
                        .HasForeignKey("SobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gost");

                    b.Navigation("Soba");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Rezervacija", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.Gost", "Gost")
                        .WithMany("Rezervacija")
                        .HasForeignKey("GostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiRSII.WebApi.Database.Soba", "Soba")
                        .WithMany("Rezervacija")
                        .HasForeignKey("SobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gost");

                    b.Navigation("Soba");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.RezervacijaUsluga", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.Rezervacija", "Rezervacija")
                        .WithMany("RezervacijaUsluge")
                        .HasForeignKey("RezervacijaID");

                    b.HasOne("SeminarskiRSII.WebApi.Database.Usluga", "Usluga")
                        .WithMany("RezervacijaUsluge")
                        .HasForeignKey("UslugaId");

                    b.Navigation("Rezervacija");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Soba", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.SobaStatus", "SobaStatus")
                        .WithMany("Soba")
                        .HasForeignKey("SobaStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SobaStatus");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.SobaOsoblje", b =>
                {
                    b.HasOne("SeminarskiRSII.WebApi.Database.Osoblje", "Osoblje")
                        .WithMany("SobaOsoblje")
                        .HasForeignKey("OsobljeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeminarskiRSII.WebApi.Database.Soba", "Soba")
                        .WithMany("SobaOsoblje")
                        .HasForeignKey("SobaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Osoblje");

                    b.Navigation("Soba");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Drzava", b =>
                {
                    b.Navigation("Grad");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Gost", b =>
                {
                    b.Navigation("GostiNotifikacije");

                    b.Navigation("Recenzija");

                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Grad", b =>
                {
                    b.Navigation("Gost");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Notifikacije", b =>
                {
                    b.Navigation("GostiNotifikacije");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Novosti", b =>
                {
                    b.Navigation("Notifikacije");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Osoblje", b =>
                {
                    b.Navigation("Novosti");

                    b.Navigation("OsobljeUloge");

                    b.Navigation("SobaOsoblje");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Rezervacija", b =>
                {
                    b.Navigation("RezervacijaUsluge");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Soba", b =>
                {
                    b.Navigation("Cjenovnik");

                    b.Navigation("Recenzija");

                    b.Navigation("Rezervacija");

                    b.Navigation("SobaOsoblje");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.SobaStatus", b =>
                {
                    b.Navigation("Soba");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.Usluga", b =>
                {
                    b.Navigation("RezervacijaUsluge");
                });

            modelBuilder.Entity("SeminarskiRSII.WebApi.Database.VrstaOsoblja", b =>
                {
                    b.Navigation("OsobljeUloge");
                });
#pragma warning restore 612, 618
        }
    }
}
